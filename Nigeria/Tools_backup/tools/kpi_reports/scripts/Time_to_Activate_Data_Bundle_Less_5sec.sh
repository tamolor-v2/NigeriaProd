#!/bin/bash
date=$(date '+%Y%m%d')
old_date=$(date -d '-10 day' '+%Y%m%d')
/opt/presto/bin/presto --server master01004:8099 --catalog hive5 --schema flare_8 --execute "insert into  kpi_reports.network_kpi select cast(hour(current_timestamp) as int) hour , 6 as kpiType_id ,sum(sec1 + sec5)/cast(sum(sec1 + sec5 + sec15 + sec30 + sec30plus) as double)*100 measure_value, 4 as unit_id , 4 as target_id, date_format(date_trunc('hour',current_timestamp), '%Y-%m-%d %H:%i:%s') current_datetime, ${date} tbl_dt from (select cast(split(split(timedelay, ';')[1],':')[2] as bigint) sec1, cast(split(split(timedelay, ';')[2],':')[2] as bigint) sec5, cast(split(split(timedelay, ';')[3],':')[2] as bigint) sec15, cast(split(split(timedelay, ';')[4],':')[2] as bigint) sec30, cast (split(split(timedelay, ';')[5],':')[2] as bigint) sec30plus from flare_8.SAG_API where tbl_dt between ${old_date} and ${date} and APIName in ('sendSms', 'sendUssd', 'notifyUssdReception','notifySmsReception', 'genericApi', 'chargeAmount') and date_trunc('hour',date_parse(date_format(from_unixtime(cast(kamanja_loaded_date as bigint)),'%Y-%m-%d %H:%i:%s'),'%Y-%m-%d %H:%i:%s')) between date_trunc('hour',(current_timestamp + interval '-1' hour)) and date_trunc('hour',current_timestamp) union all select cast(split(split(timedelay, ';')[1],':')[2] as bigint) sec1, cast(split(split(timedelay, ';')[2],':')[2] as bigint) sec5, cast(split(split(timedelay, ';')[3],':')[2] as bigint) sec15, cast(split(split(timedelay, ';')[4],':')[2] as bigint) sec30, cast (split(split(timedelay, ';')[5],':')[2] as bigint) sec30plus from flare_8.IB_API where tbl_dt between ${old_date} and ${date} and (APIName in ('addPeriodicAccountManagementData', 'runPeriodicAccountManagement') or (APIName = 'eligibilityValidation' and upper(DestModule) like '%UPC%')) and date_trunc('hour',date_parse(date_format(from_unixtime(cast(kamanja_loaded_date as bigint)),'%Y-%m-%d %H:%i:%s'),'%Y-%m-%d %H:%i:%s')) between date_trunc('hour',(current_timestamp + interval '-1' hour)) and date_trunc('hour',current_timestamp))" --output-format CSV
