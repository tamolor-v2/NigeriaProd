
import org.apache.spark.sql._
val hiveContext = new org.apache.spark.sql.hive.HiveContext(sc)

hiveContext.sql("set hive.enforce.bucketing=true")
hiveContext.sql("set hive.exec.dynamic.partition.mode=nonstrict")





hiveContext.sql("
insert overwrite table flare_8.HSDP_SUM partition (DATE_KEY)   
SELECT 
A.CALL_TIMESTAMP,
A.MSISDN_KEY,
A.PACKAGE_CD AS SERVICE_CLASS,
A.TRANS_CD AS TRANSID,
A.CHANNEL,
PROD.SMS_ACCESS_CODE AS SHORT_CODE,
A.PRODUCT_CD,
A.CALL_COST_AMT,
A.DA_AMOUNT_USED,
CASE WHEN LENGTH(PROD.SERVICE_NAME)=0 THEN SEV.SERVICE_NAME ELSE PROD.SERVICE_NAME END SERVICE_NAME,
CASE WHEN LENGTH(A.PARTNER_CD)=0 THEN SEV.SERVICE_ID ELSE A.PARTNER_CD END PARTNER_CD,
CASE WHEN LENGTH(PROD.PARTNER_ID)=0 THEN SEV.PARTNER_ID ELSE PROD.PARTNER_ID END PARTNER_ID,
CASE WHEN LENGTH(PROD.PARTNER_NAME)=0 THEN SEV.PARTNER_NAME ELSE PROD.PARTNER_NAME END PARTNER_NAME,
PROD.PRODUCT_NAME,
PROD.SERVICE_CATEGORY,
PROD.SERVICE_SUB_CATEGORY,
A.DATE_KEY
 FROM (
SELECT
DATE_KEY,
CAST(MSISDN_NSK AS BIGINT) MSISDN_KEY,
ORIGINATING_SERVICES,
CALL_TIMESTAMP,
SUBSCRIPTION_TYPE,
PARTNER_CD,
expiry_dt,
TRANS_CD,
TONE_CD,
PRODUCT_CD,
CHANNEL,
DA_AMOUNT_USED,
CALL_COST_AMT,
PAYMENT_OPTION_CD,
BYTES_QTY,
CALL_DURATION_QTY,
PACKAGE_CD,
RECORD_TYPE,
TERMINATING_PHONENUMBER,
CHRONO_NUMBER,
CALL_REFERENCE_ID
FROM
(
SELECT
tbl_dt date_key,
msisdn_key msisdn_nsk,
ORIGINATINGSERVICES ORIGINATING_SERVICES,
original_timestamp_enrich CALL_TIMESTAMP,
CASE WHEN ORIGINATINGSERVICES = 'HWCRBT' THEN TRIM(UPPER(subscriptiontype)) ELSE ORIGINATINGSERVICES END SUBSCRIPTION_TYPE,
CASE WHEN ORIGINATINGSERVICES = 'HWSDP' THEN TRIM(UPPER(subscriptiontype)) ELSE ORIGINATINGSERVICES END PARTNER_CD,
CASE WHEN ORIGINATINGSERVICES = 'HWCRBT' THEN TRANSID ELSE NULL END expiry_dt,
CASE WHEN ORIGINATINGSERVICES = 'HWSDP' THEN TRIM(TRIM(TRANSID)) ELSE NULL END TRANS_CD,
CASE WHEN ORIGINATINGSERVICES = 'HWCRBT' THEN regexp_replace (UPPER (VASCODE), 'NULL', '') ELSE ORIGINATINGSERVICES END TONE_CD,
CASE WHEN ORIGINATINGSERVICES = 'HWSDP' THEN UPPER(TRIM(VASCODE)) ELSE ORIGINATINGSERVICES END PRODUCT_CD,
UPPER(CHANNEL) CHANNEL,
cast(case when length(dedicatedamountused)=0 then '0' else dedicatedamountused end as double) DA_AMOUNT_USED,
cast(case when length(COSTOFSESSION)=0 then '0' else COSTOFSESSION end as double) CALL_COST_AMT,
PAYTYPE PAYMENT_OPTION_CD,
cast(DATA_VOLUME_INCOMING_1 as bigint) BYTES_QTY,
cast(CALLDURATION as bigint) CALL_DURATION_QTY,
SERVICECLASSID PACKAGE_CD,
CASE
WHEN trim(VASCODE) IN( '234012000003326') THEN 'P'
WHEN ORIGINATINGSERVICES = 'HWCRBT' THEN 'C'
WHEN ORIGINATINGSERVICES = 'HWSDP' THEN 'H'
WHEN ORIGINATINGSERVICES = 'USSDGW' THEN 'S'
ELSE ORIGINATINGSERVICES
END RECORD_TYPE,
CASE
WHEN ORIGINATINGSERVICES = 'USSDGW' THEN VASCODE
WHEN trim(VASCODE) IN('234012000003326') AND SERVICEPROVIDER_IDENTIFIER='28-502-0' THEN 'RECEIVE'
WHEN trim(VASCODE) IN('234012000003326') AND SERVICEPROVIDER_IDENTIFIER='28-501-0' THEN 'SEND'
ELSE NULL END TERMINATING_PHONENUMBER,
CHRONONUMBER AS CHRONO_NUMBER,
CALLREFERENCEID AS CALL_REFERENCE_ID,
ROW_NUMBER() OVER (PARTITION BY CHRONONUMBER,original_timestamp_enrich,COSTOFSESSION,MSISDN_KEY,
CALLREFERENCEID,ORIGINATINGSERVICES,TBL_DT) rn
from flare_8.cs5_ccn_gprs_ma
where tbl_dt >= firstdate and tbl_dt <= seconddate and
TRIM(UPPER(ORIGINATINGSERVICES)) IN ('HWSDP')
)x
where rn=1
) A
LEFT OUTER JOIN nigeria.HSDP_LOOKUP PROD
ON (A.PRODUCT_CD = prod.PRODUCT_ID)
LEFT OUTER JOIN (SELECT DISTINCT
SERVICE_ID,
PARTNER_NAME,
PARTNER_ID,
SERVICE_NAME
FROM nigeria.HSDP_LOOKUP PROD) SEV
ON (A.PRODUCT_CD = SEV.SERVICE_ID)
")




exit;

